#+TITLE: Linux
#+AUTHOR: venikx
#+STARTUP: content, indent

- [[https://www.amazon.com/Unix-Programming-Environment-Prentice-Hall-Software/dp/013937681X][The UNIX Programming Environment]]
- [[https://www.youtube.com/watch?v=csI5Vwh7a2c][Ansible Digital Ocean Setup]]
- [[https://github.com/edbizarro/dotfiles][Cool inpiration for dotfiles]]

* History
*UNIX* was an OS developed at [[https://www.youtube.com/watch?v=tc4ROCJYbm0][AT&T Bell Labs (video)]] in the 1960s -> 1980s. GNU/Linux,
MacOSX and Android are based of the idea of UNIX. The idea was to separate the printed
commands from the actual mainframce (the real processing power). The same principle is
still applied to the terminal today (stdin & stdout).

** Kernel (core)
The kernel controls access between programs and system resources like: CPU scheduling,
I/O to computer hardware, memory, ...

** Utilities
Any distro comes with a wide range of programs, which each perform a single-purpose
existence. The programs should adhere to the UNIX philosophy:
1. Do one thing well
2. Output of the program is the input of another
3. Everything is text <3

* The bash life-cycle
1. Login to Linux (+ verify identity)
2. Bash executes initial commands for profile
3. Bash enters a loop
   The loop breaks by typing ~exit~, ~logout~ or hitting ~C-d~.
   - Read line
   - Parse the line, expand braces
   - Execute the command

* Learning the shell
** [[file:resources/linux-cli-cheatsheet.pdf][Linux Command Cheatsheet]]
** Symbolic Links
#+BEGIN_SRC shell
$ ln -s original_file location_of_the_link
#+END_SRC

** man - display a programs manual page
The manual is seperated into 8 sections:
1. User commands
2. Programming interfaces for kernel system calls
3. Programming interfaces to the C library
4. Special files such as device nodes and drivers
5. File formats
6. Games and amusements such as screen savers
7. Miscellaneous
8. System administration commands

The manual is intended as a reference documentation and not as a tutorial. The structure makes no
senser for a new user. It's very accurate and complete while being concise. It's a challenge to
understand and read it.

** Redirection
Programs such as ~ls~ send the results to a special file called /standard output (stdout)/. The status messages
are written to /standard error (stderr)/. By default both of those files are linked to the screen and not saved
into a disk file.

#+BEGIN_SRC shell
# Redirect the stdout to a .txt (will override, use >> if appending behaviour is required
$ ls -l /usr/bin > ls-output.txt

# Redirecting stderr (0: input, 1: output, 2: error and & for output & error)
$ ls -l /bin/usr 2> ls-error.txt
#+END_SRC

* Printer drivers
https://void.webconverger.org/docs/config/print/

** Installation
1. Install the CUPS daemon
   ~xbps-install -S cups cups-filters~
2. Install the different printer drivers
   ~xbps-install -S gutenprint hplip foomatic-db foomatic-db-nonfree~
3. Run the HP setup (default options are fine)
   ~hp-setup -i~

** Configuration
Note: be sure to login to the CUPS web interface via root, not user.
Otherwise you'll need to add the user to the ~sys~ group, which is [[https://unix.stackexchange.com/questions/235477/cups-add-printer-page-returns-forbidden-on-web-interface/294675%0A][meh]].

1. Enable the service
   ~ln -s /etc/sv/cupsd /var/service/~
2. Navigate to http://localhost:631 and go to Administration >
   Printers > Add Printer.
3. Login with username "root" and use the root password.
4. Find new printers
