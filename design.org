#+TITLE: Design
#+AUTHOR: AnaRobynn
#+FILETAGS: :design:color:layout:
#+STARTUP: hideblocks

Related: [[file:javascript.org][wiki:Javascript]]
Resources: [[https://emmet.io/][Emmet]]

* General guidelines
** Discovery by example
*** Who is the client and what interests them?
    Me. I want to:
    1. Promote the "Venikx" brand
    2. Be able to write down ideas, learnings, experiences, ...
    3. Let the people find me easily on the active platform: gitlab, github, twitter,
       twitch, (later: codepen, dribble, behance)
    4. +Showcase my work+

*** Who is my audience and what interests them?
    - /Colleagues/ might be interested in articles or find my social media
    - /Other developers/ might be interested in other stuff I wrote, whenever they come from
      medium or something else
    - /Viewers/ might be interested in a streaming schedule, the social media I'm active at
      and potentially the website could even be used to link to certain articles when
      someone has questions / FAQ section.
    - +Potential employers+

*** Content
    - Articles / stream schedule (most important)
    - About me
    - Social media
    - veniks branding
    - Contact
    - Stream/article highlights or something

** Wireframing
   - Minimal
   - Easy to throw away
   - Quick

*** How?
    - Use pen & paper
    - Write down what information goes on the page and how much there is
    - Crazy 8's (fold paper into 8 pieces and start wireframing)
    - Sleep

* Layout
** Grids
   Resources: [[https://www.amazon.com/Making-Breaking-Second-Updated-Expanded/dp/163159284X/ref=sr_1_1?s=books&ie=UTF8&qid=1543935738&sr=1-1&keywords=making+and+breaking+the+grid][Making and breaking the grid]], [[https://gridbyexample.com/examples/][Grid by Example (CSS)]], [[https://labs.jensimmons.com/][Experimental Layout Lab]]
   Grid helps to break down layout into smaller components, so we don't have to think
   about color, layout, typography,... at the same time.

** Balance
   *Symmentry* is used to keep layouts nice and clean. However without *asymmetry* it makes
   the design look flat, boring and basic. The beauty of design is about balancing out
   asymmetry vs symmetry.

   Examples:
   - [[https://dribbble.com/Orizon][Orizon Design]]
   - [[https://en.wikipedia.org/wiki/Rule_of_thirds][Rule of thirds]]
   - Triad composition

** Shape
   Resources: [[https://bennettfeely.com/clippy/][Clippy]], [[https://codepen.io/yoksel/full/fsdbu/][CSS and SVG Masks]], [[https://codepen.io/sdras/pen/XdgBOa][React Responsive Layout with SVG]],
   [[https://24ways.org/2016/css-writing-modes/][CSS writing-mode]]

   *Circles* live outside of lines. If the circles are perfectly lined up with other shapes
   the circle is going to look "off" and weird. The eye likes circles and compensates the
   shape.

   *Diagonals* are an amazing way to break table based layouts.

** Scale & Cropping
   Enlarging, cropping, mask, rotating an image can make the image part of the design,
   rather than being an image on the website.

** Anchoring
   is keeping the images, text, etc aligned with each other. The best way to start seeing
   these anchor points is to draw straight lines on designs from other people.

** Tools
   - Sketch
   - Figma
   - Illustrator (SVG) - Way better than Sketch for exporting SVG's.

** Exercises
   1. Create grid compositions in black and white!
   2. Find a layout similar to: [[https://gridbyexample.com/examples/][Grid by Example (CSS)]] and modify it to the design

* Color
  Resources: [[https://www.smashingmagazine.com/2010/01/color-theory-for-designers-part-1-the-meaning-of-color/][Color theory for designers]], [[https://color.adobe.com/create/color-wheel/][Adobe Color Tool]], [[https://coolors.co/][Coolers]], [[https://www.adobe.com/be_en/products/capture.html][Adobe Capture]],
  [[http://www.colorzilla.com/gradient-editor/][CSS Gradients]], [[https://www.visualcinnamon.com/portfolio/][Data Visualization]]

** Color Modes
   - Additive color mixing :: creates colors by adding light from a certain spectrum. The
        main colors are: red, green and blue. Together they make the white light.

   - Subtractive color mixing :: creates colors by filtering out the light from a certain
        spectrum. The primary colors are: cyan, yellow, magenta and the key (black, common
        when used in printing).

** Types of Combinations
   - Monochromatic :: shades of the same color. Elegant, clean and balanced.
   - Complementary :: colors opposite from the wheel. Contrast.
   - Analogous :: colors and shades next to each other. Richer and more variation than
                  monochromatic color schemes
   - Triadic :: three colors equally placed around the circle. Vibrant, rich and
                harmonious.

** Accesbility
   A color is only a color in relation to another color
   Resources: [[https://colorable.jxnblk.com/][Colorable]], [[http://www.dasplankton.de/portfolio-item/contrast-a/][Contrast-A]], [[http://accessible-colors.com/][Accessible Colors]], [[https://www.brandwood.com/a11y/][Background image a11y check]]

** Exercises
   Use [[https://css-tricks.com/yay-for-hsla/][hsla]], because it's the most human-readable form to represent colors in code.
   Use native CSS variables for branding and commonly used colors.
   Use a limited amount of colors (3 colors + 2 accents) and their respective greys.

* Typography
  Resources: [[https://store.legal.thomsonreuters.com/law-products/Practice-Materials/Typography-for-Lawyers-2d/p/105523076][Typography for Lawyers]]

** Basics
   Resources: [[https://fonts.google.com/][Google font (free)]], [[https://www.fontsquirrel.com/][Font Squirrel (inexpensive)]], [[https://www.typography.com/][Hoefler&Co (expensive)]]

   - Serif :: Fonts with serifs (little thingies at the end of the letters).
   - Sans :: Fonts without serifs.
   - Script :: Cursive fonts.
   - Handwritten :: Resembles handwritten.
   - Display :: can be both sans and serif fonts, but they are bold and have more
                personality, which makes them ideal for titles, but not so much for text.
   - Novelty :: Unique, themed, quirky fonts. Example: Halloween fonts

** Pairing
   Resources: [[https://fontjoy.com/][Font Joy]]

   - One display, one sans-serif.
     One serif, one sans-serif.
   - Not more than three, pick two.
   - Don't use similar fonts.

** Legibility
*** Typographic color
   Rythem and cadence of typography is a metric used to measure if a font is usable for a
   body text. If there is too much going, it's not boring enough for a body text.
   Squint the eyes and check if the cadence is even.

*** Responsive
    https://codepen.io/collection/nLbRMZ/

*** Text lockup
    https://css-tricks.com/snippets/svg/text-lock-up/

** Terminology
   - Proportional vs monospaced fonts
   - Kerning :: letter spacing
   - Lead :: line spacing
   - Widow :: only word on a line
   - Orphan :: line ending on a different paragraph (bothers more people than widows)
   - Ligatures :: combining letters

** Performance
   Resources: [[https://www.zachleat.com/web/five-whys/][Five whys of web font loading performance]], [[https://www.npmjs.com/package/subfont][subfont]], [[https://robinrendle.com/adventures/][Robin Rendle]]

** Variable fonts
   https://codepen.io/collection/XqRLMb/2/

* Inspiration
  Resources: Dribbble, Behance, [[https://codepen.io/patterns/][CodePen]], [[https://glitch.com/][Glitch]], [[https://thenounproject.com/][Icons for everything]]

** Working from memory
   1. Get inspired
   2. Wait...
   3. Recreate from memory, not directly

** Master Copies
   is similar to reverse engineering the design. You can copy for practice, but not to
   show it to people.
** [[http://give-n-go.co/][Turning design into code]]

* Images
  You can't be a web performance expert without being an image expert.
  Resources: [[https://unsplash.com/][Unsplash (free)]], Shutterstock (expensive)

** Formats
   - Raster :: Pixel-based graphics (resolution depedendent)
   - Vector :: Curve-based graphics (resolution independent)

** Exports
   - Double the size, low compression
   - TinyJPG/TinyPNG
   - Webpack plugins
   - Optimazing SVG's with [[https://jakearchibald.github.io/svgomg/][SVGOMG]]

** Clipping and masking
   https://css-tricks.com/masking-vs-clipping-use/

** Usage
   - img tag
   - background source
   - inline for SVG's
   - sprites
   - full page background

* Prototyping
  Humans over-estimate passive waits by 36%. Not if the user is occupied.
  Resources: [[https://dribbble.com/leoleung][Leo Lung]], [[https://tympanus.net/codrops/][Codrops]], [[https://greensock.com/][Greensock]]

** Tools
*** Feature requirements
    | As...              | I expected that... | so that...      |
    | Indentify the user | describe the task  | explain outcome |
    |                    |                    |                 |

*** [[https://medium.com/design-story/story-map-3cc64033128e][Story maps]]
*** [[http://thekineticui.com/motion-design-is-the-future-of-ui/][Motion design is the future of ui]]

** Types
*** Thumbnails
    No big commitment, easy to throwaway.

*** Storyboards
*** Low-fi prototype (possible in Codepen, to show animation)
*** High-fi prototype (Codepen)
*** [[https://github.com/xavczen/nextjs-page-transitions][Smooth page transitions]]
