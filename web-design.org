#+TITLE: HTML, CSS and design
#+AUTHOR: venikx
#+STARTUP: content, indent

- [[http://www.dailyui.co/][Dailly UI Challenge]]
- [[http://collectui.com/][Collect UI]]
- [[https://www.webdesignmuseum.org/][Web Design Museum]]
- [[https://typographyforlawyers.com/][Typography for Lawyers]]

* DOM
** Event Delegation
avoids adding event listeners to specific nodes. A parent node can listen for events
happening in it's children, by hooking up an event listener on the node. The parent can
delegate the event back to the correct child.

** Event Propagation
is the fact that an event (for example: ~click~) on an element. The browser first ripples
the event down, until it found the source. The browser bubbles up the event when the
location was found.

* Design
** Examples
*** Stripe Navigation
[[file:resources/stripe-navbar.png]]

#+Begin_SRC javascript
function handleEnter(){
  this.classList.add('trigger-enter');
  setTimeout(() => this.classList.contains('trigger-enter')
   && this.classList.add('trigger-enter-active'), 150);

  background.classList.add('open');

  const dropdown = this.querySelector('.dropdown');

  const navCoords = nav.getBoundingClientRect();
  const coords = {
    height: dropdownCoords.height,
    width: dropdownCoords.width,
    // adjust top and left coords when other elements come before or inside the nav
    top: dropdownCoords.top - navCoords.top,
    left: dropdownCoords.left - navCoords.left
  };
#+END_SRC

** Finding inspiration
Learn by recreating a master copy OR get inspired and recreate from memory

- [[https://give-n-go.co/][Give 'n Go (dribble shots as CodePen's)]]
- [[https://thenounproject.com/][Icons for Everything]]

** Discovery
1. What interests the client?
2. What interests the audience?
3. List the content
4. Wireframing

** Layout
Resources: [[https://www.amazon.com/Making-Breaking-Second-Updated-Expanded/dp/163159284X/ref=sr_1_1?s=books&ie=UTF8&qid=1543935738&sr=1-1&keywords=making+and+breaking+the+grid][Making and breaking the grid]], [[https://gridbyexample.com/examples/][Grid by Example (CSS)]], [[https://labs.jensimmons.com/][Experimental Layout Lab]],  [[https://bennettfeely.com/clippy/][Clippy]],
[[https://codepen.io/yoksel/full/fsdbu/][CSS and SVG Masks]], [[https://codepen.io/sdras/pen/XdgBOa][React Responsive Layout with SVG]], [[https://24ways.org/2016/css-writing-modes/][CSS writing-mode]]

*** Grids
Grid helps to break down layout into smaller components, so we don't have to think
about color, layout, typography,... at the same time.

*** Balance
*Symmentry* is used to keep layouts nice and clean. However without *asymmetry* it makes
the design look flat, boring and basic. The beauty of design is about balancing out
asymmetry vs symmetry.

Examples:
- [[https://dribbble.com/Orizon][Orizon Design]]
- [[https://en.wikipedia.org/wiki/Rule_of_thirds][Rule of thirds]]
- Triad composition

*** Shape
*Circles* live outside of lines. If the circles are perfectly lined up with other shapes
the circle is going to look "off" and weird. The eye likes circles and compensates the
shape.

*Diagonals* are an amazing way to break table based layouts.

*** Scale & Cropping
Enlarging, cropping, mask, rotating an image can make the image part of the design,
rather than being an image on the website.

*** Anchoring
is keeping the images, text, etc aligned with each other. The best way to start seeing
these anchor points is to draw straight lines on designs from other people.

** Color
*** Color Modes
- Additive color mixing :: creates colors by adding light from a certain spectrum. The
     main colors are: red, green and blue. Together they make the white light.

- Subtractive color mixing :: creates colors by filtering out the light from a certain
     spectrum. The primary colors are: cyan, yellow, magenta and the key (black, common
     when used in printing).

*** Types of Combinations
- Monochromatic :: shades of the same color. Elegant, clean and balanced.
- Complementary :: colors opposite from the wheel. Contrast.
- Analogous :: colors and shades next to each other. Richer and more variation than
               monochromatic color schemes
- Triadic :: three colors equally placed around the circle. Vibrant, rich and
             harmonious.

** Typography
*** [[https://www.zachleat.com/web/five-whys/][Performance]]
*** Pairing
- One display, one sans-serif.
  One serif, one sans-serif.
- Not more than three, pick two.
- Don't use similar fonts.

** Images
You can't be a web performance expert without being an image expert.

*** Formats
- Raster :: Pixel-based graphics (resolution depedendent)
- Vector :: Curve-based graphics (resolution independent)

*** Exports
- Double the size, low compression
- TinyJPG/TinyPNG
- Webpack plugins
- Optimazing SVG's with [[https://jakearchibald.github.io/svgomg/][SVGOMG]]

*** Clipping and masking
https://css-tricks.com/masking-vs-clipping-use/

*** Usage
- img tag
- background source
- inline for SVG's
- sprites
- full page background
